// O(n^2logn) solution
long long int M=1e9+7;

class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& A) {
        
        vector<vector<int>> ans;
        int n=A.size();
        sort(A.begin(),A.end());
        map<long long int,bool> mp;
        for(int i=0;i<n-2;i++){
            if(A[i]>0) break;
            while(i>0 && A[i]==A[i-1])i++;
            int l=i+1, r=n-1;
            int desired=-1*(A[i]);
            while(l<r){
                if(A[l]+A[r]<desired)l++;
                else if(A[l]+A[r]>desired)r--;
                else{
                    ans.push_back(vector<int>{A[i],A[l],A[r]});
                    while(l<n && A[l]==A[l+1])l++;
                    while(r>0 && A[r]==A[r-1])r--;
                    l++;
                    r--;
                }
            }
        }
        
        return ans;
    }
};
