/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        
        ListNode *p1, *p2;
        int l1=0,l2=0,diff;
        p1=headA;
        while(p1!=NULL){
            p1=p1->next;
            l1++;
        }
        p2=headB;
        while(p2!=NULL){
            p2=p2->next;
            l2++;
        }
        if(l1>=l2){
            diff=l1-l2;
            p1=headA;
            p2=headB;
            while(diff>0)p1=p1->next,diff--;
            while(p1!=p2){
                p1=p1->next;
                p2=p2->next;
            }
            return p1;
        } else {
            diff=l2-l1;
            p1=headB;
            p2=headA;
            while(diff>0)p1=p1->next,diff--;
            while(p1!=p2){
                p1=p1->next;
                p2=p2->next;
            }
            return p1;   
        }   
    }
};
