class Solution {
public:
    vector<string> topKFrequent(vector<string>& words, int k) {
        vector<string> ans;
        int n = words.size();
        vector<pair<int,string>> vp;
        map<string,int> mp;
        map<int,vector<string>> mp2;
        
        for(int i=0;i<n;i++){       //O(n)
            if(mp.find(words[i])==mp.end()){
                mp[words[i]]=1;
            }else{
                mp[words[i]]++;
            }
        }
        
        for(auto it=mp.begin();it!=mp.end();++it){  //O(n)
            mp2[it->second].push_back(it->first);        
        }
        
        int cnt=k;
        for(auto it=mp2.rbegin();it!=mp2.rend();++it){
            sort(it->second.begin(),it->second.end());  //O(xlogx)
            for(int i=0;i<it->second.size();i++){
                ans.push_back(it->second[i]);
                cnt--;
                if(cnt==0) break;
            }
            if(cnt==0) break;
        }      
        return ans;    
    }
};
