/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> ans;
    vector<vector<int>> pathSum(TreeNode* root, int sum) {
        vector<int> curvect;
        if(root==NULL) return ans;
        f(root, sum, curvect);
        return ans;
    }
    void f(TreeNode* cur, int cursum, vector<int> curvect){
        if(cur->right==NULL && cur->left==NULL){
            if(cursum==cur->val){
                curvect.push_back(cur->val);
                ans.push_back(curvect);
            }
            return;
        }
        curvect.push_back(cur->val);
        if(cur->left!=NULL)
            f(cur->left, cursum-cur->val, curvect);
        if(cur->right!=NULL)
            f(cur->right, cursum-cur->val, curvect);
        return;
    }
};
